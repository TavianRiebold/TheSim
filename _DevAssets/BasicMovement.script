go.property("max_camera_offset", vmath.vector3(300, 500, 0))
go.property("camera_offset_lerp", 0.05)
go.property("crosshair", true)

local camera = require "orthographic.camera"

local SPEED = 400

local CAMERA_ID = hash("/camera")
local PLAYER_ID = hash("/Camera_Controller")

function init(self)
	self.input = {}
	self.camera_offset = vmath.vector3()
	self.lerp = 0.05


	msg.post(".", "acquire_input_focus")
	local w = 600
	local h = 400
	msg.post(CAMERA_ID, "deadzone", { left = w/2, right = w/2, bottom = h/2, top = h/2 })
	msg.post(CAMERA_ID, camera.MSG_FOLLOW, {
		target = PLAYER_ID,
		lerp = self.lerp,
		offset = self.camera_offset,
		horizontal = true,
		vertical = true,
	})
end

function update(self, dt)

	local pos = go.get_position()
	if self.input[hash("key_w")] then
		pos.y = pos.y + SPEED * dt
		self.camera_offset.y = vmath.lerp(self.camera_offset_lerp, self.camera_offset.y, self.max_camera_offset.x)
	elseif self.input[hash("key_s")] then
		pos.y = pos.y - SPEED * dt
		self.camera_offset.y = vmath.lerp(self.camera_offset_lerp, self.camera_offset.y, -self.max_camera_offset.x)
	end
	if self.input[hash("key_a")] then
		pos.x = pos.x - SPEED * dt
		self.camera_offset.x = vmath.lerp(self.camera_offset_lerp, self.camera_offset.x, -self.max_camera_offset.y)
	elseif self.input[hash("key_d")] then
		pos.x = pos.x + SPEED * dt
		self.camera_offset.x = vmath.lerp(self.camera_offset_lerp, self.camera_offset.x, self.max_camera_offset.y)
	end

	go.set_position(pos)

	msg.post(CAMERA_ID, camera.MSG_FOLLOW_OFFSET, { offset = self.camera_offset})
end

function on_input(self, action_id, action)
	if action_id then
		if action.pressed then
			self.input[action_id] = true
		elseif action.released then
			self.input[action_id] = false
		end
	end
end
